'From Squeak5.1 of 5 September 2016 [latest update: #16549] on 21 November 2017 at 10:34:05 am'!Object subclass: #Rational	instanceVariableNames: 'numerator denominator distance time mass'	classVariableNames: ''	poolDictionaries: ''	category: 'UserObjects'!!Rational methodsFor: 'internal methods' stamp: 'dkm 11/21/2017 10:24'!gcd: x number2: y		|a b |		a := x.		b := y.		[(b = 0) not] 		whileTrue: [ |r|  			r := a rem: y.			a := b.			b := r].		^a! !!Rational methodsFor: 'internal methods' stamp: 'dkm 11/21/2017 10:25'!simplify		|g|		g:= self gcd: numerator number2: denominator.		numerator := numerator/g.		denominator := denominator/g.	! !!Rational methodsFor: 'accessor' stamp: 'dkm 11/21/2017 10:26'!getDenominator		^denominator! !!Rational methodsFor: 'accessor' stamp: 'dkm 11/21/2017 10:26'!getDistance^distance! !!Rational methodsFor: 'accessor' stamp: 'dkm 11/21/2017 10:27'!getMass	^mass! !!Rational methodsFor: 'accessor' stamp: 'dkm 11/21/2017 10:26'!getNumerator		^numerator! !!Rational methodsFor: 'accessor' stamp: 'dkm 11/21/2017 10:27'!getTime	^time! !!Rational methodsFor: 'printing' stamp: 'dkm 11/21/2017 10:23'!printRational		^(numerator printString), '/', (denominator printString)			! !!Rational methodsFor: 'operation' stamp: 'dkm 11/21/2017 10:22'!add: aNumerator den: aDenominator dist: aDistance tm: aTime ms: aMass	"add two rationals"((aDistance = distance) & (aTime = time) & (aMass = mass)) 		ifTrue: [		| num den result |		num := (numerator * aDenominator) + (denominator * aNumerator).		den := denominator * aDenominator.		result := self new num den distance time mass.		result simplify.		^result		]		ifFalse:[			self error: 'The rationals do not have equivalent dimmensions'		].			! !!Rational methodsFor: 'initializing' stamp: 'dkm 11/21/2017 10:20'!init: num number2: den unit1: dist unit2: tm unit3: ms	"initialize a Rational"den = 0		ifTrue: [self error: 'The number 0 cannot be in the denominator'].		(num isKindOf: Integer)	ifFalse:[ self error: 'The number in the numerator must be an integer'].		(den isKindOf: Integer)		ifFalse:[self error: 'The number in the denominator must be an integer'].				numerator:= num.		denominator := den.		distance := dist.		time := tm.		mass := ms.! !!Rational methodsFor: 'initializing' stamp: 'dkm 11/21/2017 10:19'!new: numerator number2: denominator d: distance t:  time m: mass	"create a Rational"	| d |		d := self init: numerator num2: denominator num3: distance num4:  time num5: mass.		^d! !